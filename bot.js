const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");

const bot = new TelegramBot("7685580414:AAESieIhpTYC4cqu4rlsylautq99bA-W8Vg", { polling: true });

const pendingActions = {};

bot.on("callback_query", async (query) => {
	const chatId = query.message.chat.id;
	const data = query.data;

	if (data.startsWith("ban_") || data.startsWith("kick_")) {
		const [action, playerName] = data.split("_");
		pendingActions[chatId] = { action, playerName };

		bot.sendMessage(chatId, `üõ† –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –¥–ª—è ${action.toUpperCase()} –∏–≥—Ä–æ–∫–∞ ${playerName} (–∏–ª–∏ "." –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π, –∏–ª–∏ "–æ—Ç–º–µ–Ω–∞")`);
	}

	if (data.startsWith("unban_")) {
		const playerName = data.split("_")[1];
		await axios.post("http://localhost:3000/roblox", {
			action: "unban",
			playerName,
		});
		bot.sendMessage(chatId, `üîì –ò–≥—Ä–æ–∫ ${playerName} —Ä–∞–∑–±–∞–Ω–µ–Ω`);
	}
});

bot.on("message", async (msg) => {
	const chatId = msg.chat.id;
	const text = msg.text?.trim();
	const actionData = pendingActions[chatId];

	if (!actionData) return;

	if (text.toLowerCase() === "–æ—Ç–º–µ–Ω–∞") {
		delete pendingActions[chatId];
		return bot.sendMessage(chatId, "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.");
	}

	const reason = text === "." ? "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã" : text;
	const { action, playerName } = actionData;
	delete pendingActions[chatId];

	try {
		await axios.post("http://localhost:3000/roblox", {
			action,
			playerName,
			reason,
		});
		bot.sendMessage(chatId, `‚úÖ –ö–æ–º–∞–Ω–¥–∞ ${action.toUpperCase()} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è ${playerName}`);
	} catch (err) {
		console.error("–û—à–∏–±–∫–∞:", err.message);
		bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã: ${err.message}`);
	}
});
