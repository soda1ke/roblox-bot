const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");
process.env.BOT_TOKEN = "7685580414:AAESieIhpTYC4cqu4rlsylautq99bA-W8Vg";
const app = express();
const PORT = 3000;

app.use(cors());
app.use(bodyParser.json());

let lastCommand = null; // –ó–¥–µ—Å—å —Ö—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–æ–º–∞–Ω–¥—É –æ—Ç Telegram

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã Roblox Studio
app.get("/roblox", (req, res) => {
	if (lastCommand) {
		const commandToSend = { ...lastCommand };
		lastCommand = null; // –û—á–∏—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
		console.log("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Roblox:", commandToSend);
		res.json(commandToSend);
	} else {
		res.status(204).send(); // –ù–µ—Ç –∫–æ–º–∞–Ω–¥—ã
	}
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç Telegram-–±–æ—Ç–∞
app.post("/roblox", (req, res) => {
	const { action, playerName, reason } = req.body;

	if (!action || !playerName) {
		return res.status(400).send("‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤");
	}

	lastCommand = { action, playerName, reason };
	console.log("üì• –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç Telegram:", lastCommand);
	res.send("‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞");
});
// –ü–æ–ª—É—á–µ–Ω–∏–µ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram –∫–Ω–æ–ø–æ–∫
app.post("/telegram", (req, res) => {
  const body = req.body;

  if (body.callback_query) {
    const data = body.callback_query.data;
    const callbackId = body.callback_query.id;

    const [action, playerName] = data.split("_");
    const reason = "–ò–∑ Telegram"; // –∏–ª–∏ –∂–¥–∏ –ø—Ä–∏—á–∏–Ω—ã –ø–æ–∑–∂–µ

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
    lastCommand = { action, playerName, reason };
    console.log("üì© –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –∫–Ω–æ–ø–∫–∏ Telegram:", lastCommand);

    // –û—Ç–≤–µ—Ç–∏—Ç—å Telegram, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å ¬´–∑–∞–≥—Ä—É–∑–∫–∞¬ª —É –∫–Ω–æ–ø–∫–∏
    const axios = require("axios");
    axios.post(`https://api.telegram.org/bot${process.env.BOT_TOKEN}/answerCallbackQuery`, {
      callback_query_id: callbackId,
      text: `‚úÖ –ö–æ–º–∞–Ω–¥–∞ ${action} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞`,
      show_alert: false
    }).catch(console.error);

    return res.send("ok");
  }

  res.sendStatus(200);
});

app.listen(PORT, () => {
	console.log(`üåê Server is running on http://localhost:${PORT}`);
});
app.get("/test", (req, res) => {
  res.send("üü¢ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç");
});
app.get("/force", (req, res) => {
  try {
    const raw = req.query.data;
    const data = JSON.parse(raw);
    if (data && data.action && data.playerName) {
      latestCommand = data;
      res.send("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞");
    } else {
      res.status(400).send("‚ùå –ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ");
    }
  } catch (err) {
    res.status(500).send("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON");
  }
});
